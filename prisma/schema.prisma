// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  name        String    @unique @db.VarChar()
  address     String    @db.VarChar()
  email       String    @db.VarChar()
  contactName String    @db.VarChar()
  invoices    Invoice[]
  products    Product[]
}

model Invoice {
  id          Int             @id @default(autoincrement())
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  customer    Customer        @relation(fields: [customerId], references: [id])
  customerId  Int
  invoiceDate DateTime        @default(now())
  dueDate     DateTime        @default(now())
  lineItems   LineItem[]
  paid        Boolean         @default(false)
  template    InvoiceTemplate @relation(fields: [templateId], references: [id])
  templateId  Int
}

model Product {
  id         Int        @id @default(autoincrement())
  name       String     @unique @db.VarChar()
  price      Float
  customerId Int?
  customer   Customer?  @relation(fields: [customerId], references: [id])
  LineItem   LineItem[]
}

model LineItem {
  id        Int     @id @default(autoincrement())
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  invoiceId Int
  invoice   Invoice @relation(fields: [invoiceId], references: [id])
}

model InvoiceTemplate {
  id                  Int       @id @default(autoincrement())
  name                String
  fromAddress         String
  paymentInstructions Json
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  invoices            Invoice[]
}
